// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SeleniumTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using OpenQA.Selenium;
    using OpenQA.Selenium.Chrome;
    using OpenQA.Selenium.Firefox;
    using OpenQA.Selenium.Appium;
    using OpenQA.Selenium.Appium.Android;
    using OpenQA.Selenium.Remote;
    using OpenQA.Selenium.Appium.Enums;

    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {

        /// <summary>
        /// TestMethod - Use 'TestMethodParams' to pass parameters into this method.
        /// </summary>
        /// 
        AppiumDriver<AndroidElement> _driver; 
        public void TestMethod()
        {

            DesiredCapabilities cap = new DesiredCapabilities();
            //  cap.SetCapability("deviceName", "H5NPCV052448C7B");

            cap.SetCapability(MobileCapabilityType.DeviceName, "ZY223C8PZB");
           // cap.SetCapability("app", "null");

            // Set BROWSER_NAME desired capability. It's Android in our case here.
            cap.SetCapability(MobileCapabilityType.BrowserName, "Chrome");

            // Set android VERSION desired capability. Set your mobile device's OS version.
            cap.SetCapability(CapabilityType.Version, "7.0");

            cap.SetCapability("platformName", "Android");

            _driver = new AndroidDriver<AndroidElement>(new Uri("http://127.0.0.1:4723/wd/hub"), cap);

         //   var txtusername = _driver.FindElement(By.Id("txtUsername"));
           // var txtpassword = _driver.FindElement(By.Id("txtPassword"));

            var _navigation = _driver.Navigate();
            _navigation.GoToUrl(@"http://crkrv-poms2/poms");

            //_driver.Navigate().GoToUrl("http://wwww.google.com");
            _driver.FindElement(By.Id("txtUsername")).SendKeys("pomsuser");
            _driver.FindElement(By.Id("txtPassword")).SendKeys("poms123");
            _driver.FindElement(By.Id("XbtnLogin")).Click();



            _driver.Quit();
        }
        
        #region Properties
        public virtual TestMethodParams TestMethodParams
        {
            get
            {
                if ((this.mTestMethodParams == null))
                {
                    this.mTestMethodParams = new TestMethodParams();
                }
                return this.mTestMethodParams;
            }
        }
        
        public UIMozillaFirefoxStartPWindow UIMozillaFirefoxStartPWindow
        {
            get
            {
                if ((this.mUIMozillaFirefoxStartPWindow == null))
                {
                    this.mUIMozillaFirefoxStartPWindow = new UIMozillaFirefoxStartPWindow();
                }
                return this.mUIMozillaFirefoxStartPWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestMethodParams mTestMethodParams;
        
        private UIMozillaFirefoxStartPWindow mUIMozillaFirefoxStartPWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Select 'goo' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "goo";
        
        /// <summary>
        /// Select '' in list box
        /// </summary>
        public string UIItemListSelectedItemsAsString = "";
        
        /// <summary>
        /// Select 'google.com/' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem1 = "google.com/";
        
        /// <summary>
        /// Type '{Enter}' in 'Search or enter address' text box
        /// </summary>
        public string UISearchorenteraddressEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMozillaFirefoxStartPWindow : WinWindow
    {
        
        public UIMozillaFirefoxStartPWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Mozilla Firefox Start Page - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
            this.WindowTitles.Add("Google - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UINavigationToolbarToolBar UINavigationToolbarToolBar
        {
            get
            {
                if ((this.mUINavigationToolbarToolBar == null))
                {
                    this.mUINavigationToolbarToolBar = new UINavigationToolbarToolBar(this);
                }
                return this.mUINavigationToolbarToolBar;
            }
        }
        
        public UIMozillaFirefoxStartPApplication UIMozillaFirefoxStartPApplication
        {
            get
            {
                if ((this.mUIMozillaFirefoxStartPApplication == null))
                {
                    this.mUIMozillaFirefoxStartPApplication = new UIMozillaFirefoxStartPApplication(this);
                }
                return this.mUIMozillaFirefoxStartPApplication;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UINavigationToolbarToolBar mUINavigationToolbarToolBar;
        
        private UIMozillaFirefoxStartPApplication mUIMozillaFirefoxStartPApplication;
        
        private UIItemComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavigationToolbarToolBar : WinToolBar
    {
        
        public UINavigationToolbarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Navigation Toolbar";
            this.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
            this.WindowTitles.Add("Google - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
                    this.mUIItemComboBox.WindowTitles.Add("Google - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMozillaFirefoxStartPApplication : WinControl
    {
        
        public UIMozillaFirefoxStartPApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Mozilla Firefox Start Page - Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UISearchorenteraddressEdit
        {
            get
            {
                if ((this.mUISearchorenteraddressEdit == null))
                {
                    this.mUISearchorenteraddressEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISearchorenteraddressEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Search or enter address";
                    this.mUISearchorenteraddressEdit.WindowTitles.Add("Mozilla Firefox Start Page - Mozilla Firefox");
                    #endregion
                }
                return this.mUISearchorenteraddressEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISearchorenteraddressEdit;
        #endregion
    }
}
